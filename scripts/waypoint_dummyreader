#!/usr/bin/python

import time
import Axon
import random


class DummyReaderSource(Axon.ThreadedComponent.threadedcomponent):
    nodeid = 1
    nodestring = "Dummy1"
    initialdelay = 1
    mintag_time = 0.5
    max_tag_time = 1
    def main(self):
        tags = range(20)
        t = self.initialdelay * random.random()
        time.sleep(t)
        while True:
            tag = random.choice(tags)
            self.send( [ time.time(), tag, [self.nodeid, self.nodestring]],
                       "outbox")
            t = self.mintag_time + (self.max_tag_time - self.mintag_time) * random.random()
            time.sleep(t)


if __name__ == "__main__":
    import sys
    from Kamaelia.Chassis.Pipeline import Pipeline
    from Kamaelia.Util.Console import ConsoleEchoer
    from Kamaelia.Util.PureTransformer import PureTransformer
    from Kamaelia.Internet.TCPClient import TCPClient
    import json

    if len(sys.argv) > 1:
        ip = sys.argv[1]

        if len(sys.argv) > 2:
            port = int(sys.argv[2])
        else:
            port = 1600

        Pipeline(
            DummyReaderSource(),
            PureTransformer(lambda x: json.dumps(x)+"\n"),
            TCPClient(ip, port)
        ).run()

    else:
        Pipeline(
            DummyReaderSource(),
            PureTransformer(lambda x: str(x)+"\n"),
            ConsoleEchoer()
        ).run()
    